package com.cloudframe.app.trdpb007.file;
/* Java Code Generated by CloudFrame */

import java.io.FileNotFoundException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import com.cloudframe.app.utility.CFFile;
import com.cloudframe.app.utility.CFConstants;

@Component("trdpb007_scanner")
public class Scanner extends CFFile {


	private Logger logger = LoggerFactory.getLogger(Scanner.class);
	
	@Value("${TRDPB007.Scanner:SYSIN}")
	private String fileName;	

	@Value("${TRDPB007.ScannerCharSet:cp1047}")
	private String charSet;
	
	@Value("${TRDPB007.ScannerCRLFflag:no}")
	private String crlfFlag;	

	boolean opened = false;

	public Scanner()
	{
		setFixedBlockFile(true);
		setRecord(new byte[80]);
	}

	/**
	 * This function is not required in this subclass for your program to work as intended. 
	 * CloudFrame generated this function to provide you hints for the code you must write 
	 * to change the implementation and remove runtime and license dependency on CloudFrame. 
	 * Consult CloudFrame's customer wiki for additional information. https://wiki.cloudframe.com
	 **/
	@Override
	public String getFileName() {
		return fileName;
	}
	
	/**
	 * This function is not required in this subclass for your program to work as intended. 
	 * CloudFrame generated this function to provide you hints for the code you must write 
	 * to change the implementation and remove runtime and license dependency on CloudFrame. 
	 * Consult CloudFrame's customer wiki for additional information. https://wiki.cloudframe.com
	 **/	
	@Override
	public  void setFileName(String fileName) {
		this.fileName = fileName;
	}
	
	@Override
	public void open(String mode) {
		setFileCharSet(charSet);
		setAppendCrlfFlag(crlfFlag);
		try {	
			opened = true;
			super.open(mode,fileName);
		} catch(FileNotFoundException fe) {
			status = CFConstants.FILE_NOT_FOUND;
			logger.info("Error Opening Sysin.in/SYSIN FlInputFile: Not found "); 
		} catch(Exception io) {
			status = CFConstants.FILE_NOT_FOUND;
			logger.error("Error Opening Sysin.in/SYSIN FlInputFile: Exception {}",io.getMessage()); 
		}
	}
	
	public char[] nextLine() {
		if (!opened) open("r");
		try {
			read();
			if (status == 0) {
				return getCharArray(record);
		    } else {
		       ended = true;
		       return new char[1];
		    }
		} catch (Exception e) {
            logger.error("Error during FlInputFile Read: {}",e.getMessage());		
		}
		return new char[0];
	}
	
    @Override
	public void close() {
		try {
			super.close();
			opened = false;
		} catch (Exception e) {
			logger.error("Error during FlInputFile Close: {}",e.getMessage() ); 
		}
	}
}
